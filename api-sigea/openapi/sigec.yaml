openapi: 3.0.0
info:
  title: SigecAPIDMS
  description: Rest Api che consente la gestione e il monitoraggio degli eventi della regione Puglia
  version: v1
servers:
  - url: "http://localhost:9292/SigecAPI"
    description: LOCALE
  - url: ND
    description: SVILUPPO
  - url: ND
    description: COLLAUDO
  - url: ND
    description: PRODUZIONE
paths:
  /eventi/id/list:
    get:
      tags:
        - Eventi modificati
      summary: "Restituisce la lista degli eventi validati modificati nel periodo indicato. Se non viene inserita nessuna data restituisce tutti gli eventi validati "
      parameters:
        - name: dataA
          in: query
          description: data di fine per la ricerca nel formato YYYY-MM-DD(se non inserita viene considerata la data attuale)
          required: false
          schema:
            type: string
        - name: dataDa
          in: query
          description: data di partenza per la ricerca nel formato YYYY-MM-DD (se non inserita viene considetata la data iniziale del progetto)
          required: false
          schema:
            type: string
      operationId: getEventiModificati
      responses:
        "200":
          description: "Json contenente una lista in cui viene esplicitato l'id, lo stato e la data dell'ultima modifica"
          content:
            application/json:
              schema:
                type: number
                format: int64
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/external/{id}/{fileType}/{fileName}":
    get:
      tags:
        - Eventi modificati
      summary: API per la lettura di un qualunque file (sia per quelli associati al nucleo che quelli associati ad una precisa pubblicazione)
      parameters:
        - name: id
          in: path
          description: "id dell'evento associato al file"
          required: true
          schema:
            type: number
            format: int64
        - name: fileType
          in: path
          description: tipo del file (immagine o documento)
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: id del file seguito dalla sua estensione (esempio 33.jsp)
          required: true
          schema:
            type: string
        - name: idPubblicazione
          in: query
          description: id della pubblicazione
          required: false
          schema:
            type: number
            format: int64
      operationId: getFileExternal
      responses:
        "200":
          description: Oggetto contenente il file sotto forma di array di byte
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: binary
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/external/{id}":
    get:
      tags:
        - Eventi modificati
      summary: API per la lettura di un evento
      parameters:
        - name: id
          in: path
          description: "Id dell'evento su cui effettuare la ricerca"
          required: true
          schema:
            type: number
            format: int64
      operationId: getEventoExternal
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventoModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /segnalazioni:
    post:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: "API per l'inserimento di una segnalazione evento"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SegnalazioneModel"
      operationId: insertSegnalazione
      responses:
        "200":
          content: {}
          description: Segnalazione correttamente creata
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la lettura della lista delle segnalazioni evento in un dato comune e in un dato giorno
      parameters:
        - name: dataDa
          in: query
          description: Data in cui effettuare la ricerca
          required: true
          schema:
            type: string
            format: date
        - name: codIstat
          in: query
          description: Codice istat del comune su cui effettuare la ricerca
          required: true
          schema:
            type: string
      operationId: getListaSegnalazioni
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SegnalazioneModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/segnalazioni/{id}":
    get:
      tags:
        - SegnalazioneAPI
      summary: API per la lettura di una segnalazione evento
      parameters:
        - name: id
          in: path
          description: Id della segnalazione su cui effettuare la lettura
          required: true
          schema:
            type: number
            format: int64
      operationId: getSegnalazione
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SegnalazioneModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
    put:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la modifica dello stato di una segnalazione evento
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SegnalazioneStatoPatchModel"
      parameters:
        - name: id
          in: path
          description: Id della segnalazione su cui effettuare il cambio di stato
          required: true
          schema:
            type: integer
            format: int64
      operationId: cambiaStato
      responses:
        "200":
          description: Cambio stato avvenuto correttamente
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /segnalazioni/listapaginata:
    get:
      tags:
        - SegnalazioneAPI
      summary: API per la lettura della lista paginata delle segnalazioni evento (gli oggetti presenti nella lista ottenuta sono una proiezione del model rappresentante la segnalazione vera e propria)
      parameters:
        - name: wrappedFilter
          in: query
          description: filtro codificato da applicare per la paginazione
          required: true
          schema:
            type: object
            properties:
              detail:
                $ref: "#/components/schemas/WrapperFilterPaginationDetail"
              filter:
                $ref: "#/components/schemas/SegnalazioneFilter"
      operationId: getListaPaginataSegnalazioni
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  draw:
                    type: integer
                  recordsTotal:
                    type: integer
                  recordsFiltered:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SegnalazioneModelList"
          description: Oggetto contenente le specifiche di paginazione
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /eventi/export/start:
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per lo start del polling per export dati
      parameters:
        - name: wrappedFilter
          in: query
          description: filtro codificato da applicare per la paginazione
          required: true
          schema:
            type: object
            properties:
              search:
                $ref: "#/components/schemas/WrapperFilterPaginationDetail"
              filter:
                $ref: "#/components/schemas/EventoFilter"
      operationId: getListaPaginataEventiThread
      responses:
        "200":
          content:
            plain/text:
              schema:
                type: string
                format: binary
                description: Uuid per accesso al file di export
          description: Ricerca avviata con successo
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /eventi/export/fetch:
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la lettura della lista eventi da esportare
      parameters:
        - name: uuid
          in: query
          description: uuid per la ricerca
          required: true
          schema:
            type: string
      operationId: getEventiExport
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventoModelList"
          description: Oggetto contenente gli eventi per export
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{stato}":
    put:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: "API per l'inserimento o aggiornamento di un evento"
      parameters:
        - name: stato
          in: path
          description: "Stato in cui si trova l'evento al momento del salvataggio"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventoModel"
      operationId: saveEvento
      responses:
        "200":
          content: {}
          description: Evento correttamente creato/aggiornato
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{id}":
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la lettura di un evento
      parameters:
        - name: id
          in: path
          description: "Id dell'evento su cui effettuare la ricerca"
          required: true
          schema:
            type: number
            format: int64
      operationId: getEvento
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventoModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
    delete:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la cancellazione di un evento
      parameters:
        - name: id
          in: path
          description: "Id dell'evento da eliminare"
          required: true
          schema:
            type: number
            format: int64
      operationId: deleteEvento
      responses:
        "200":
          description: Cancellazione effettuata
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{id}/validato":
    get:
      tags:
        - EventoAPI
      summary: "API per la lettura del nucleo un evento se esso si trova correntemente nella stato validato (in caso contrario l'endpoint restituirà 404). Questo endpoint può essere utilizzato per inizializzare una scheda redazionale, oppure per realizzare un riassunto dell'evento"
      parameters:
        - name: id
          in: path
          description: "Id dell'evento su cui effettuare la ricerca"
          required: true
          schema:
            type: number
            format: int64
      operationId: getEventoValidato
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventoModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/lock/{id}":
    post:
      tags:
        - EventoAPI
      summary: API per il lock di un evento. Assicura che un evento non venga contemporaneamente utilizzato da più utenti. Il lock dura 30 secondi se non rinnovato
      parameters:
        - name: id
          in: path
          description: "Id dell'evento da lockare"
          required: true
          schema:
            type: number
            format: int64
      operationId: lockEvento
      responses:
        "200":
          content: {}
          description: Lock correttamente creato/aggiornato
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /eventi/listapaginata:
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la lettura della lista paginata degli eventi
      parameters:
        - name: wrappedFilter
          in: query
          description: filtro codificato da applicare per la paginazione
          required: true
          schema:
            type: object
            properties:
              search:
                $ref: "#/components/schemas/WrapperFilterPaginationDetail"
              filter:
                $ref: "#/components/schemas/EventoFilter"
      operationId: getListaPaginataEventi
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  draw:
                    type: integer
                  recordsTotal:
                    type: integer
                  recordsFiltered:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/EventoModelList"
          description: Oggetto contenente le specifiche di paginazione
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /eventi/stati:
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la lettura degli stati
      operationId: getStatiEvento
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StatoModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{id}/{fileType}/{fileName}":
    get:
      tags:
        - EventoAPI
      summary: API per la lettura di un qualunque file (sia per quelli associati al nucleo che quelli associati ad una precisa pubblicazione)
      parameters:
        - name: id
          in: path
          description: "id dell'evento associato al file"
          required: true
          schema:
            type: number
            format: int64
        - name: fileType
          in: path
          description: tipo del file (immagine o documento)
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: id del file seguito dalla sua estensione (esempio 33.jsp)
          required: true
          schema:
            type: string
        - name: idPubblicazione
          in: query
          description: id della pubblicazione
          required: false
          schema:
            type: number
            format: int64
      operationId: getFile
      responses:
        "200":
          description: Oggetto contenente il file sotto forma di array di byte
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: binary
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{id}/file":
    post:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per il salvataggio di un file
      parameters:
        - name: id
          in: path
          description: "Id dell'evento a cui associare il file"
          required: true
          schema:
            type: number
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      operationId: saveFile
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ImmagineModel"
                  - $ref: "#/components/schemas/DocumentoEventoModel"
                  - $ref: "#/components/schemas/PubblicazioneAllegatoModel"
          description: salvataggio correttamente avvenuto
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{id}/pubblicazione/{idPubblicazione}/file":
    post:
      tags:
        - EventoAPI
      summary: API per il salvataggio di un file da associare ad una specifica scheda redazionale individuata da un particolare id di pubblicazione
      parameters:
        - name: id
          in: path
          description: "Id dell'evento a cui associare il file"
          required: true
          schema:
            type: number
            format: int64
        - name: idPubblicazione
          in: path
          description: "Id della pubblicazione di quell'evento a cui assiciare il file"
          required: true
          schema:
            type: number
            format: int64
        - name: resizeWidth
          in: query
          description: larghezza in pixel per cui effettuare un eventuale resize
          required: false
          schema:
            type: number
            format: int32
        - name: resizeHeight
          in: query
          description: altezza in pixel per cui effettuare un eventuale resize
          required: false
          schema:
            type: number
            format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      operationId: saveFilePubblicato
      responses:
        "200":
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ImmagineModel"
                  - $ref: "#/components/schemas/DocumentoEventoModel"
                  - $ref: "#/components/schemas/PubblicazioneAllegatoModel"
          description: salvataggio correttamente avvenuto
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{id}/titoli":
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la lettura degli eventi da associare
      parameters:
        - name: id
          in: path
          description: "id dell'evento"
          required: true
          schema:
            type: number
            format: int64
        - name: tipoEvento
          in: query
          description: tipologia della relazione
          required: false
          schema:
            type: string
        - name: q
          in: query
          description: "titolo dell'evento"
          required: true
          schema:
            type: string
      operationId: getEventoTitoli
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventoTitoloModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/attivita/{id}":
    put:
      tags:
        - Endpoint accessibili solo dal DMS
      summary: "API per la modifica dell'attivita"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttivitaModel"
      parameters:
        - name: id
          in: path
          description: "id dell'evento di cui cambiare l'attività"
          required: true
          schema:
            type: number
            format: int64
      operationId: cambiaAttivita
      responses:
        "200":
          description: Cambiamento avvenuto correttamente
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/duplica/{id}":
    post:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la duplicazione di un evento
      parameters:
        - name: id
          in: path
          description: "id dell'evento da duplicare"
          required: true
          schema:
            type: number
            format: int64
      operationId: duplicaEvento
      responses:
        "200":
          description: Duplicazione avvenuta correttamente
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /eventi/raggruppamentopercomune:
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la lettura degli eventi per comune
      operationId: getEventoPerComune
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmartModelList"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{id}/pubblicazioni":
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: "API per l'acquisizione della lista delle pubblicazioni di un evento"
      parameters:
        - name: id
          in: path
          description: "id dell'evento da ricercare"
          required: true
          schema:
            type: number
            format: int64
      operationId: getPubblicazioniList
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PubblicazioneModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{id}/logEventi":
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: "API per l'acquisizione della lista delle operazioni eseguite su un evento"
      parameters:
        - name: id
          in: path
          description: "id dell'evento da ricercare"
          required: true
          schema:
            type: number
            format: int64
      operationId: getLogEventiList
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogEventoModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/redazione/{idRedazione}":
    get:
      tags:
        - EventoAPI
      summary: "API per l'acquisizione della lista delle pubblicazioni per una determinata redazione. Per poter accedere ai soli campi dell'ultimo nucleo validato è possibile utilizzare la redazione generica GENERAL."
      parameters:
        - name: idRedazione
          in: path
          description: id della redazione che ha pubblicato
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: espressione FIQL per effettuare un filtraggio sui dati
          required: false
          schema:
            type: string
      operationId: getPubblicazioniListByMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PubblicazioneModel"
          description: Lista delle pubblicazioni selezionate
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{idEvento}/redazione/{idRedazione}":
    get:
      tags:
        - EventoAPI
      summary: API per la lettura della scheda redazionale corrente per un dato evento e per una data redazione
      parameters:
        - name: idEvento
          in: path
          description: "id dell'evento da ricercare"
          required: true
          schema:
            type: number
            format: int64
        - name: idRedazione
          in: path
          description: id della redazione che ha pubblicato
          required: true
          schema:
            type: string
        - name: idPubblicazione
          in: query
          description: id della pubblicazione
          required: false
          schema:
            type: number
            format: int64
      operationId: getMetadataFromEvento
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PubblicazioneModel"
          description: "Pubblicazione selezionata (o quella individuata dall'idPubblicazione oppure l'ultima della redazione specificata)"
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{idEvento}/redazione/{idRedazione}/{tipologiaId}":
    put:
      tags:
        - EventoAPI
      summary: "API per l'inserimento/aggiornamento dei dati di una scheda redazionale per una data redazione per un dato evento in qualita di un determinato tipo di utente"
      parameters:
        - name: idEvento
          in: path
          description: "id dell'evento da ricercare"
          required: true
          schema:
            type: number
            format: int64
        - name: tipologiaId
          in: path
          description: id della tipologia utente con cui si intende effettuare la pubblicazione
          required: true
          schema:
            type: string
        - name: idRedazione
          in: path
          description: id della redazione che sta effettuando la pubblicazione
          required: true
          schema:
            type: string
        - name: noteAggiuntive
          in: query
          description: eventuali note aggiuntive da attribuire alla pubblicazione
          required: true
          schema:
            type: string
        - name: statoPubblicazione
          in: query
          description: "stato della pubblicazione (BOZZA, REDATTO, PUBBLICATO)"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      operationId: addMetadataToEvento
      responses:
        "200":
          content:
            plain/text:
              schema:
                type: number
                format: int64
                description: id della pubblicazione
          description: Inserimento avvenuto correttamente
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{idEvento}/redazione/{idRedazione}/{tipologiaId}/recupero":
    put:
      tags:
        - EventoAPI
      summary: "API per recuperare il contenuto dell'ultima pubblicazione della scheda redazionale di una precisa redazione per un preciso evento in qualità di un determinato tipo di utente"
      parameters:
        - name: idEvento
          in: path
          description: "id dell'evento da ricercare"
          required: true
          schema:
            type: number
            format: int64
        - name: tipologiaId
          in: path
          description: id della tipologia utente con cui si intende effettuare la pubblicazione
          required: true
          schema:
            type: string
        - name: idRedazione
          in: path
          description: id della redazione che sta effettuando la pubblicazione
          required: true
          schema:
            type: string
      operationId: recoverLastPubblicazione
      responses:
        "200":
          content:
            plain/text:
              schema:
                type: number
                format: int64
                description: id della pubblicazione
          description: Inserimento avvenuto correttamente
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/eventi/{idEvento}/redazione/{idRedazione}/{tipologiaId}/revocapubblicazione":
    delete:
      tags:
        - EventoAPI
      summary: API per revocare la pubblicazione relativa alla scheda redazionale di una precisa redazione per un preciso evento in qualità di un determinato tipo di utente
      parameters:
        - name: idEvento
          in: path
          description: "id dell'evento da ricercare"
          required: true
          schema:
            type: number
            format: int64
        - name: tipologiaId
          in: path
          description: id della tipologia utente con cui si intende effettuare la pubblicazione
          required: true
          schema:
            type: string
        - name: idRedazione
          in: path
          description: id della redazione che sta effettuando la pubblicazione
          required: true
          schema:
            type: string
      operationId: deleteLastPubblicazione
      responses:
        "200":
          content:
            plain/text:
              schema:
                type: number
                format: int64
                description: id della pubblicazione
          description: Revocamento avvenuto correttamente
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /utenti:
    put:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: "API per la profilazione dell'utente, i dati vengono estratti direttamente dal token"
      operationId: saveUtente
      parameters:
        - name: tipologia
          in: query
          description: "id tipologia da associare all'utente"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Profilazione avvenuta correttamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DettaglioUtenteModel"
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /tipologie:
    get:
      tags:
        - UtenteAPI
      summary: API per la lettura delle possibili tipologie utente
      operationId: getTipologie
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TipologiaModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /redazioni:
    get:
      tags:
        - UtenteAPI
      summary: API per la lettura delle redazioni
      operationId: getRedazioni
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RedazioneModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /decodifiche:
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: "API per la lettura dell'elenco delle decodifiche"
      operationId: getDecodifiche
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DecodificaModel"
          description: Oggetto contenente le decodifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /progetti:
    get:
      tags:
        - Endpoint accessibili solo da SIGEA
      summary: API per la lettura dei progetti per Partita IVA
      operationId: getProgettiByPIVA
      parameters:
        - name: partitaIva
          in: query
          description: Partita IVA su cui effettuare al ricerca
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProgettoModel"
          description: Oggetto contenente i progetti per Partita IVA
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /riconciliazioni:
    get:
      tags:
        - Endpoint accessibili solo dal DMS
      summary: "API per la lettura dell'elenco degli eventi da riconciliare per una o più email"
      operationId: riconciliazioneElenco
      parameters:
        - name: elencomail
          in: query
          description: elenco delle emaill
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ElencoEventiEmail"
          description: "Array contenente l'elenco degli eventi da riconciliare per ogni email"
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /riconciliazioni/associazioni:
    post:
      tags:
        - Endpoint accessibili solo dal DMS
      summary: API per effetuare la riconciliazione sugli eventi
      operationId: riconciliazioneAssociazione
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ElencoRiconciliazioni"
      responses:
        "200":
          description: Riconciliazione completata
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          description: Riconciliazione non effettuata a causa di un conflitto su uno o più eventi
          content:
            application/json:
              schema:
                type: object
                description: "id dell'evento su cui si è verificato il conflitto"
                additionalProperties:
                  type: string
                  description: "Titolo italiano dell'evento"
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /mezzi:
    get:
      tags:
        - OntologiaAPI
      summary: API per la lettura dei mezzi
      operationId: getMezzi
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MezzoModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /prodotti:
    get:
      tags:
        - OntologiaAPI
      summary: API per la lettura dei prodotti
      operationId: getProdotti
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProdottoModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /tipologiemibact:
    get:
      tags:
        - OntologiaAPI
      summary: API per la lettura delle tipologie mibact
      operationId: getTipologieMIBACT
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TipologiaMIBACTModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /tipologieattivita:
    get:
      tags:
        - OntologiaAPI
      summary: API per la lettura delle tipologie delle attività
      operationId: getTipologieAttivita
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TipologiaAttivitaModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /bandiProgetti:
    get:
      tags:
        - Bandi
      summary: "API per la lettura dei bandi e prodotti associati all'attivita"
      parameters:
        - name: idAttivita
          in: query
          description: "id dell'attivita"
          required: false
          schema:
            type: number
            format: int64
      operationId: getBandiProgetti
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BandoModelList"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  "/ricevute/export/{idEvento}":
    get:
      tags:
        - Eventi finanziati
      summary: API per il download della ricevuta
      parameters:
        - name: idEvento
          in: path
          description: "id dell'evento da ricercare"
          required: true
          schema:
            type: number
            format: int64
        - name: stato
          in: query
          description: parametro per distinguere se prima ricevuta o appena generata
          required: true
          schema:
            type: string
      operationId: getRicevuteExport
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: "ricevuta aggiornata dell'evento"
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
  /valoriattrattivita:
    get:
      tags:
        - OntologiaAPI
      summary: API per la lettura dei valori di attrattività
      operationId: getValoriAttrattivita
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValoreAttrattivitaTuristicaModel"
          description: Oggetto contenente le specifiche
          headers:
            X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
            X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
            X-RateLimit-Reset:
              $ref: "#/components/headers/X-RateLimit-Reset"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/default"
      security:
        - bearerAuth: []
      x-auth-type: "Application & Application User"
      x-throttling-tier: Unlimited
components:
  schemas:
    AccessibilitaModel:
      type: object
      properties:
        eventoId:
          type: number
          format: int64
          description: Id del relativo evento
        flagFamiglieBambini:
          type: boolean
          description: Famiglie con bambini
        flagPersoneAnimali:
          type: boolean
          description: Persone con animali
        flagDisabilitaFisica:
          type: boolean
          description: Disabilità fisica
        flagDisabilitaVisiva:
          type: boolean
          description: Disabilità visiva
        flagDisabilitaUditiva:
          type: boolean
          description: Disabilità uditiva
        flagGravidanza:
          type: boolean
          description: Donne in stato di gravidanza
        flagAnziani:
          type: boolean
          description: Anziani
        flagCaniMedi:
          type: boolean
          description: Cani taglia media
        flagCaniPiccoli:
          type: boolean
          description: Cani taglia piccola
        flagCani:
          type: boolean
          description: Tutti i cani
        flagBiblioteca:
          type: boolean
          description: Biblioteca per bambini
        flagGiardini:
          type: boolean
          description: Spazi esterni attrezzati (giardini)
        flagLudoteca:
          type: boolean
          description: Ludoteca
        flagNursey:
          type: boolean
          description: Nursey
        flagParcogiochi:
          type: boolean
          description: Parco giochi
        flagPercorsi:
          type: boolean
          description: Percorsi accessibili
        flagSito:
          type: boolean
          description: Sito web accessibile
        flagInfopoint:
          type: boolean
          description: Punto informazioni/accoglienza accessibile
        flagServiziIgienici:
          type: boolean
          description: Servizi igienici accessibili
        flagParcheggioDisabili:
          type: boolean
          description: Parcheggio riservato alle persone con disabilità
        flagIngressi:
          type: boolean
          description: "Ingresso principale o secondario accessibile (pedana, ascensore, altro)"
        flagPercorsiTattili:
          type: boolean
          description: Percorsi tattili
        flagGuideBraille:
          type: boolean
          description: Guide cartacee in braille
        flagSegnaleticaBraille:
          type: boolean
          description: Segnaletica in braille
        flagSegnaleticaLeggibile:
          type: boolean
          description: Segnaletica ad altro contrasto/alta leggibilità
        flagMaterialeLeggibile:
          type: boolean
          description: Materiale informativo ad altro contrasto/alta leggibilità
        flagPostazioniAudio:
          type: boolean
          description: Postazioni audio-descrittive della struttura e del percorso
        flagAudioguide:
          type: boolean
          description: Audioguide per persone ipovedenti o non vedenti
        flagAudioguidePercorsi:
          type: boolean
          description: Audioguide con percorsi tattili per persone ipovedenti o non vedenti
        flagMaterialeSottotitolato:
          type: boolean
          description: Materiale audiovisivo sottotitolato
        flagRiproduzioneTattili:
          type: boolean
          description: Riproduzione tattili
        flagComputer:
          type: boolean
          description: Computer con descrizione vocali
        flagLis:
          type: boolean
          description: Personale che conosce la Lingua dei Segni Italiana (LIS)
    AttivitaModel:
      type: object
      properties:
        attivitaId:
          type: number
          format: int64
          description: "Id dell'attività generato dal DMS"
        denominazione:
          type: string
          description: "Denominazione dell'attività"
    AttrattoreModel:
      type: object
      properties:
        attrattoreId:
          type: number
          format: int64
          description: "Id dell'attrattore generato da VIP"
        etichetta:
          type: string
          description: "Titolo dell'attrattore"
    ConfigurazioneStato:
      type: object
      properties:
        isEditableByOwner:
          type: boolean
          description: "Indica se l'evento è editabile dall'owner nello stato corrente"
        isWorkerExclusive:
          type: boolean
          description: "Indica se l'evento è esclusivamente editabile nello stato corrente dal validatore che lo ha preso in carico"
        statiRaggiungibili:
          type: array
          description: Elenco degli stati raggiungibili a partire da quello corrente
          items:
            $ref: "#/components/schemas/StatoRaggiungibile"
    DatiGeneraliModel:
      type: object
      properties:
        eventoId:
          type: number
          format: int64
          description: Id del relativo evento
        titoloMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: Titolo
        abstractDescrMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: Abstract
        snippetMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: Snippet
        descrizioneMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: Descrizione
    DecodificaModel:
      type: object
      properties:
        key:
          type: string
          description: Id della decodifica
        value:
          type: string
          description: Decodifica testuale
    DettaglioUtenteModel:
      type: object
      properties:
        utenteId:
          type: number
          format: int64
          description: Id utente generato dal DMS
        username:
          type: string
          description: Username
        nome:
          type: string
          description: Nome
        cognome:
          type: string
          description: Cognome
        codFiscale:
          type: string
          description: Codice fiscale
        email:
          type: string
          description: E-mail
        tel:
          type: string
          description: Telefono
        cel:
          type: string
          description: Cellulare
        tipologia:
          $ref: "#/components/schemas/TipologiaModel"
    DocumentoEventoModel:
      type: object
      properties:
        documentoId:
          type: number
          format: int64
          description: Id del documento
        titoloMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: Titolo
        estensione:
          type: string
          description: Estensione file
        nomeOriginale:
          type: string
          description: Nome originale del file
        dimensione:
          type: number
          format: int64
          description: Dimensione del file
    ElencoEventiEmail:
      type: object
      properties:
        email:
          type: string
          description: Email a cui è agganciata la lista di eventi
        eventi:
          type: object
          description: "id dell'evento"
          additionalProperties:
            type: string
            description: "Titolo italiano dell'evento"
        motivazioneErrore:
          type: string
          description: "eventuale motivazione dell'errore"
    ElencoRiconciliazioni:
      type: object
      properties:
        idAttivita:
          type: number
          format: int64
          description: "id dell'attività su cui effettuare la riconciliazione"
        denominazioneAttivita:
          type: string
          description: "denominazione dell'attività su cui effettuare la riconciliazione"
        eventi:
          type: object
          description: "id dell'evento"
          additionalProperties:
            type: string
            description: "Titolo italiano dell'evento"
    EmailModel:
      type: object
      properties:
        contattoId:
          type: number
          format: int64
          description: Id del contatto
        contatto:
          type: string
          description: E-mail
    EventoFilter:
      type: object
      properties:
        idUtenteIns:
          type: number
          format: int64
          description: "Id utente che ha creato l'evento"
        idAttivita:
          type: number
          format: int64
          description: "Id attività a cui l'evento è associato"
        idRichiestaAttivita:
          type: number
          format: int64
          description: Id attività non ancora approvata
        eventoId:
          type: number
          format: int64
          description: "Id dell'evento"
        tipologia:
          type: string
          description: Id della tipologia di evento (EVENTO/RASSEGNA)
        dataInsDa:
          type: string
          description: Data di inserimento successiva al valore specificato
        dataInsA:
          type: string
          description: Data di inserimento antecedente al valore specificato
        titolo:
          type: string
          description: "Titolo in italiano dell'evento"
        cognomeOwner:
          type: string
          description: "Cognome dell'utente che ha creato l'evento"
        emailOwner:
          type: string
          description: "E-mail dell'utente che ha creato l'evento"
        denominazioneAttivita:
          type: string
          description: "Denominazione dell'attività associata all'evento"
        pubblicato:
          type: string
          description: "Flag che indica se l'evento è stato pubblicato (Sì/No)"
        finanziato:
          type: string
          description: "Flag che indica se l'evento è stato finanziato (Sì/No)"
        redazioni:
          type: array
          items:
            type: string
            description: Array di codici redazionali
        redazioniGenerali:
          type: array
          items:
            type: string
            description: Array di codici redazionali delle specifiche redazioni del redattore chiamante
        statoPubblicazione:
          type: string
          description: Stato della pubblicazione
        stato:
          type: string
          description: "Stato dell'evento"
        codNazione:
          type: string
          description: Codice della nazione proveniente dal modulo dei dati territoriali
        codRegione:
          type: string
          description: Codice della regione proveniente dal modulo dei dati territoriali
        codArea:
          type: string
          description: "Codice dell'area territoriale proveniente dal modulo dei dati territoriali"
        codProvinciaSet:
          type: array
          items:
            type: string
            description: Array di codici delle province provenienti dal modulo dei dati territoriali
        codComuneSet:
          type: array
          items:
            type: string
            description: Array di codici dei comuni provenienti dal modulo dei dati territoriali
        comuneEstero:
          type: string
          description: Comune estero
        dataDa:
          type: string
          format: date
          description: "Data dell'evento successiva al valore specificato"
        dataA:
          type: string
          format: date
          description: "Data dell'evento antecedente al valore specificato"
    EventoModel:
      type: object
      properties:
        eventoId:
          type: number
          format: int64
          description: "Id dell'evento"
        tipo:
          type: string
          description: Tipologia (EVENTO/RASSEGNA)
        idMIBACT:
          type: string
          description: Id MIBACT
        tipologiaMIBACT:
          type: string
          description: "Tipologia MIBACT (Altro, Apertura straordinaria, Attività didattica, Concerto, Convegno/Conferenza, Festival, Inaugurazione, Incontro/Presentazione, Manifestazione fieristica, Manifestazione sportiva, Mostra, Nuova apertura, Proiezione, Seminario, Spettacolo di danza, Spettacolo teatrale, Visita guidata, Visita libera)"
        grandeEvento:
          type: boolean
          description: boolean che indica se si tratta di un grande evento secondo il MIBACT
        statoId:
          type: string
          description: Id dello stato corrente
        ultimeNote:
          type: string
          description: "Nota associata all'ultimo cambio di stato"
        descrizioneStato:
          type: string
          description: Descrizione dello stato corrente
        fgValidazionePregressa:
          type: boolean
          description: "Flag che indica se l'evento ha già subito in passato una validazione"
        dataIns:
          type: string
          format: date-time
          description: Data creazione
        progettoId:
          type: number
          format: int64
          description: Id del progetto associato
        titoloProgetto:
          type: string
          description: Titolo del progetto associato
        ticket:
          $ref: "#/components/schemas/TicketModel"
        ownerId:
          type: number
          format: int64
          description: "Id del creatore dell'evento"
        nomeOwner:
          type: string
          description: "Nome del creatore dell'evento"
        cognomeOwner:
          type: string
          description: "Cognome del creatore dell'evento"
        usernameOwner:
          type: string
          description: "Username del creatore dell'evento"
        emailOwner:
          type: string
          description: "Email del creatore dell'evento"
        telOwner:
          type: string
          description: "Telefono del creatore dell'evento"
        celOwner:
          type: string
          description: "Cellulare del creatore dell'evento"
        ownerIdUltimaModifica:
          type: number
          format: int64
          description: "Id dell'utente che ha effettuato l'ultima modifica"
        nomeOwnerUltimaModifica:
          type: string
          description: "Nome dell'utente che ha effettuato l'ultima modifica"
        cognomeOwnerUltimaModifica:
          type: string
          description: "Cognome dell'utente che ha effettuato l'ultima modifica"
        usernameOwnerUltimaModifica:
          type: string
          description: "Username dell'utente che ha effettuato l'ultima modifica"
        emailOwnerUltimaModifica:
          type: string
          description: "Email dell'utente che ha effettuato l'ultima modifica"
        telOwnerUltimaModifica:
          type: string
          description: "Telefono dell'utente che ha effettuato l'ultima modifica"
        celOwnerUltimaModifica:
          type: string
          description: "Cellulare dell'utente che ha effettuato l'ultima modifica"
        attivita:
          $ref: "#/components/schemas/AttivitaModel"
        richiestaAttivita:
          $ref: "#/components/schemas/RichiestaAttivitaModel"
        datiGenerali:
          $ref: "#/components/schemas/DatiGeneraliModel"
        accessibilita:
          $ref: "#/components/schemas/AccessibilitaModel"
        emailSet:
          type: array
          description: "Array di e-mail associate all'evento"
          items:
            $ref: "#/components/schemas/EmailModel"
        telefonoSet:
          type: array
          description: "Array di telefoni associati all'evento"
          items:
            $ref: "#/components/schemas/TelefonoModel"
        sitoSet:
          type: array
          description: "Array di siti web associati all'evento"
          items:
            $ref: "#/components/schemas/SitoModel"
        locationSet:
          type: array
          description: "Array di location associate all'evento"
          items:
            $ref: "#/components/schemas/LocationModel"
        immagineSet:
          type: array
          description: "Array di immagini associate all'evento"
          items:
            $ref: "#/components/schemas/ImmagineModel"
        documentoSet:
          type: array
          description: "Array di documenti associati all'evento"
          items:
            $ref: "#/components/schemas/DocumentoEventoModel"
        linkSet:
          type: array
          description: "Array di link streaming associati all'evento"
          items:
            $ref: "#/components/schemas/LinkModel"
        relazioneSet:
          type: array
          description: "Array di relazioni associate all'evento corrente"
          items:
            $ref: "#/components/schemas/RelazioneModel"
        logSet:
          type: array
          description: "Array di log associati all'evento"
          items:
            $ref: "#/components/schemas/LogEventoModel"
        periodoSet:
          type: array
          description: "Array di periodi associati all'evento"
          items:
            $ref: "#/components/schemas/PeriodoModel"
    EventoModelList:
      type: object
      properties:
        eventoId:
          type: string
          description: "Id dell'evento"
        tipo:
          type: string
          description: Tipologia (EVENTO/RASSEGNA)
        titolo:
          type: string
          description: "Titolo dell'evento"
        owner:
          type: string
          description: "Nome dell'owner"
        emailOwner:
          type: string
          description: "Email dell'owner"
        dataDa:
          type: string
          description: Data da
        dataA:
          type: string
          description: Data a
        comune:
          type: string
          description: Elenco comuni separati da virgola
        dataIns:
          type: string
          description: Data inserimento
        stato:
          type: string
          description: "Stato dell'evento"
        finanziato:
          type: string
          description: Finanziato
        redazioni:
          type: string
          description: Elenco redazioni separato da virgola
    EventoTitoloModel:
      type: object
      properties:
        eventoId:
          type: number
          format: int64
          description: "Id dell'evento"
        titolo:
          type: string
          description: "Titolo dell'evento"
        tipo:
          type: string
          description: Tipologia (EVENTO/RASSEGNA)
        dataIns:
          type: string
          format: date-time
          description: Data creazione
    ImmagineModel:
      type: object
      properties:
        immagineId:
          type: number
          format: int64
          description: "Id dell'immagine"
        didascaliaMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: "Descrizione dell'immagine"
        credits:
          type: string
          description: "Credits dell'immagine"
        estensione:
          type: string
          description: Estensione del file
        nomeOriginale:
          type: string
          description: Nome originale del file
        dimensione:
          type: number
          format: int64
          description: Dimensione del file
    LinkModel:
      type: object
      properties:
        linkId:
          type: number
          format: int64
          description: Id del link
        titoloMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: Descrizione del link
        didscaliaMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: Didascalia del link
        credits:
          type: string
          description: Credits del link
        link:
          type: string
          description: Link
    LocationModel:
      type: object
      properties:
        locationId:
          type: number
          format: int64
          description: Id della location
        fgPrincipale:
          type: boolean
          description: Flag che indica se la location è quella principale
        codNazione:
          type: string
          description: Codice della nazione proveniente dal modulo dei dati territoriali
        codRegione:
          type: string
          description: Codice della regione proveniente dal modulo dei dati territoriali
        codProvincia:
          type: string
          description: Codice della provincia proveniente dal modulo dei dati territoriali
        codComune:
          type: string
          description: Codice del comune proveniente dal modulo dei dati territoriali
        codArea:
          type: string
          description: "Codice dell'area territoriale proveniente dal modulo dei dati territoriali"
        nomeLocation:
          type: string
          description: Nome della location
        indirizzo:
          type: string
          description: Indirizzo
        cap:
          type: string
          description: CAP
        puglia:
          type: boolean
          description: Flag che indica se la location è in Puglia
        nazione:
          type: string
          description: Nazione
        regione:
          type: string
          description: Regione
        area:
          type: string
          description: Area territoriale
        provincia:
          type: string
          description: Provincia
        comune:
          type: string
          description: Comune
        comuneEstero:
          type: string
          description: Comune Estero
        link:
          type: string
          description: Link streaming
        latitudine:
          type: number
          description: Latitudine
        longitudine:
          type: number
          description: Longitudine
        attrattoriSet:
          type: array
          description: Set di attrattori (attualmente disabilitato)
          items:
            $ref: "#/components/schemas/AttrattoreModel"
    LogEventoModel:
      type: object
      properties:
        logId:
          type: number
          format: int64
          description: Id log
        tipoOperazione:
          type: string
          description: "Tipo di operazione (INSERIMENTO, MODIFICA)"
        dataModifica:
          type: string
          format: date-time
          description: Data di modifica
        nomeUtente:
          type: string
          description: Nome utente
        operazioni:
          type: string
          description: Operazioni effettuate
        descrizioneStato:
          type: string
          description: "Stato dell'evento"
        denominazioneAttivita:
          type: string
          description: "Denominazione dell'attività"
    MezzoModel:
      type: object
      properties:
        mezzoId:
          type: string
          description: Id del mezzo
        mezzo:
          type: string
          description: Descrizione del mezzo
    PeriodoModel:
      type: object
      properties:
        periodoId:
          type: number
          format: int64
          description: Id del periodo
        dataSecca:
          type: boolean
          description: Flag che indica se si tratta di una data singola o di un periodo
        dataDa:
          type: string
          format: date
          description: Data da
        dataA:
          type: string
          format: date
          description: Data a
        fgContinuato:
          type: boolean
          description: "Flag che indica se l'orario è continuato"
        orarioApertura:
          type: string
          description: "Orario d'apertura"
        orarioChiusura:
          type: string
          description: Orario di chiusura
        orarioAperturaMattina:
          type: string
          description: "Orario d'apertura mattina"
        orarioChiusuraMattina:
          type: string
          description: Orario chiusura mattina
        orarioAperturaPomeriggio:
          type: string
          description: "Orario d'apertura pomeriggio"
        orarioChiusuraPomeriggio:
          type: string
          description: Orario di chiusura pomeriggio
        chiusuraDom:
          type: boolean
          description: Flag che indica la chiusura di domenica
        chiusuraLun:
          type: boolean
          description: Flag che indica la chiusura di lunedì
        chiusuraMar:
          type: boolean
          description: Flag che indica la chiusura di martedì
        chiusuraMer:
          type: boolean
          description: Flag che indica la chiusura di mercoledì
        chiusuraGio:
          type: boolean
          description: Flag che indica la chiusura di giovedì
        chiusuraVen:
          type: boolean
          description: Flag che indica la chiusura di venerdì
        chiusuraSab:
          type: boolean
          description: Flag che indica la chiusura di sabato
        cadenza:
          type: string
          description: "Cadenza (Nessuna, Settimanale, Mensile)"
        cadenzaDom:
          type: boolean
          description: Flag che indica la cadenza di domenica
        cadenzaLun:
          type: boolean
          description: Flag che indica la cadenza di lunedì
        cadenzaMar:
          type: boolean
          description: Flag che indica la cadenza di martedì
        cadenzaMer:
          type: boolean
          description: Flag che indica la cadenza di mercoledì
        cadenzaGio:
          type: boolean
          description: Flag che indica la cadenza di giovedì
        cadenzaVen:
          type: boolean
          description: Flag che indica la cadenza di venerdì
        cadenzaSab:
          type: boolean
          description: Flag che indica la cadenza di sabato
        cadenzaMensile:
          type: array
          items:
            type: string
            description: Array contenente i giorni del mese che indicano la cadenza
    ProdottoModel:
      type: object
      properties:
        prodottoId:
          type: string
          description: Id del prodotto
        prodotto:
          type: string
          description: Descrizione del prodotto
    ProgettoModel:
      type: object
      properties:
        progettoId:
          type: string
          description: Id del progetto
        titoloProgetto:
          type: string
          description: Titolo del progetto
        partitaIva:
          type: string
          description: Partita IVA associata al progetto
    PubblicazioneAllegatoModel:
      type: object
      properties:
        allegatoId:
          type: number
          format: int64
          description: "Id dell'allegato"
        estensione:
          type: string
          description: Estensione del file
        nomeOriginale:
          type: string
          description: Nome originale del file
        dimensione:
          type: number
          format: int64
          description: Dimensione del file
    PubblicazioneModel:
      type: object
      properties:
        ownerId:
          type: number
          format: int64
          description: "Id dell'utente che pubblica"
        nomeOwner:
          type: string
          description: "Nome dell'utente che pubblica"
        cognomeOwner:
          type: string
          description: "Cognome dell'utente che pubblica"
        redazioneId:
          type: string
          description: Id della redazione che pubblica
        nomeRedazione:
          type: string
          description: Nome della redazione che pubblica
        noteAggiuntive:
          type: string
          description: Note aggiuntive
        statoPubblicazione:
          type: string
          description: "Stato della pubblicazione (BOZZA, REDATTO, PUBBLICATO)"
        eventoModel:
          $ref: "#/components/schemas/EventoModel"
        eventoId:
          type: number
          format: int64
          description: "Id dell'evento"
        fgPubblicato:
          type: boolean
          description: "Flag che segnala la possibilità di recuperare l'ultima pubblicazione e utilizzarla per sovrascrivere quella corrente"
        genericMetadata:
          type: object
          description: "questo oggetto rappresenta un json generico che viene agganciato all'evento"
    RedazioneModel:
      type: object
      properties:
        redazioneId:
          type: string
          description: Id redazione
        nome:
          type: string
          description: Nome redazione
        link:
          type: string
          description: Link alla home del front office su cui sono visibili le pubblicazioni
        jspName:
          type: string
          description: Nome della jsp contenente la scheda di redazione qualora sia stata implementata su SigeaWeb
        linkScheda:
          type: string
          description: Link alla scheda di redazione qualora sia stata implementata su di un modulo esterno a SigeaWeb
        autoSpubblicazione:
          type: boolean
          description: "Indica se la redazione prevede l'autospubblicazione"
        attivazioneJMS:
          type: boolean
          description: "Indica se la redazione prevede l'uso del JMS"
    RelazioneModel:
      type: object
      properties:
        relazioneId:
          type: number
          format: int64
          description: Id relazione
        eventoRelazionatoId:
          type: number
          format: int64
          description: Id evento relazionato
        titolo:
          type: string
          description: "Titolo dell'evento relazionato"
        tipoRelazione:
          type: string
          description: Tipo di relazione (CONTIENE/CONTENUTO)
        tipoEventoAssociato:
          type: string
          description: Tipo evento associato (EVENTO/RASSEGNA)
    RichiestaAttivitaModel:
      type: object
      properties:
        richiestaAttivitaId:
          type: number
          format: int64
          description: Id richiesta attività
        denominazione:
          type: string
          description: Denominazione attività
    RuoloModel:
      type: object
      properties:
        ruoloId:
          type: string
          description: Id del ruolo
        permessi:
          type: object
          description: Id del permesso
          additionalProperties:
            type: boolean
            description: Indica se il ruolo ha il premesso attivo
    SegnalazioneFilter:
      type: object
      properties:
        idUtenteIns:
          type: number
          format: int64
          description: Id utente che ha creato la segnalazione
        titolo:
          type: string
          description: Titolo
        dataDa:
          type: string
          description: Data da
        dataA:
          type: string
          description: Data a
        status:
          type: string
          description: Stato
        codIstat:
          type: string
          description: Codice del comune proveniente dal modulo dei dati territoriali
        comuneEstero:
          type: string
          description: Comune estero
    SegnalazioneModel:
      type: object
      properties:
        segnalazioneId:
          type: number
          format: int64
          description: Id della segnalazione
        nome:
          type: string
          description: Titolo della segnalazione
        descrizione:
          type: string
          description: Descrizione della segnalazione
        dataDa:
          type: string
          format: date
          description: Data da
        dataA:
          type: string
          format: date
          description: Data a
        location:
          type: string
          description: Nome della location
        indirizzo:
          type: string
          description: Indirizzo
        riferimento:
          type: string
          description: Riferimento
        utenteId:
          type: number
          format: int64
          description: Id utente che crea la segnalazione
        codIstat:
          type: string
          description: Codice del comune proveniente dal modulo dei dati territoriali
        comune:
          type: string
          description: Nome del comune proveniente dal modulo dei dati territoriali
        comuneEstero:
          type: string
          description: Comune estero
    SegnalazioneModelList:
      type: object
      properties:
        segnalazioneId:
          type: string
          description: Id della segnalazione
        nome:
          type: string
          description: Nome della segnalazione
        dataDa:
          type: string
          description: Data da
        dataA:
          type: string
          description: Data a
        comune:
          type: string
          description: Comune
        riferimento:
          type: string
          description: Riferimento
        dataIns:
          type: string
          description: Data di creazione
        status:
          type: string
          description: Stato corrente
    SegnalazioneStatoPatchModel:
      type: object
      properties:
        stato:
          type: string
          description: Stato aggiornato
    SitoModel:
      type: object
      properties:
        contattoId:
          type: number
          format: int64
          description: Id del contatto
        contatto:
          type: string
          description: Sito web
    SmartModelList:
      type: object
      properties:
        codComune:
          type: string
          description: Codice del comune proveniente dal modulo dei dati territoriali
        comune:
          type: string
          description: Nome del comune proveniente dal modulo dei dati territoriali
        numEventi:
          type: number
          format: int64
          description: Numero eventi presenti nel comune
    StatoModel:
      type: object
      properties:
        statoId:
          type: string
          description: Id dello stato
        descrizione:
          type: string
          description: Descrizione dello stato
        statoInizio:
          type: boolean
          description: Indica se è lo stato di partenza del workflow
        statoFine:
          type: boolean
          description: Indica se è lo stato di fine del workflow
        accessoCondizionato:
          type: boolean
          description: Indica se le transizioni verso questo stato hanno bisogno di una conferma per essere effettuati
        nome:
          type: string
          description: Indica il nome del pulsante di transizione
        configurazioneStato:
          $ref: "#/components/schemas/ConfigurazioneStato"
    StatoRaggiungibile:
      type: object
      properties:
        statoId:
          type: string
          description: Id dello stato raggiungibile
        pubblicazione:
          type: boolean
          description: Indica se la transizione implica la pubblicazione del nucleo
        revocaPubblicazione:
          type: boolean
          description: Indica se la transizione implica la revoca della pubblicazione di tutti i dettagli delle redazioni che hanno la revoca automatica della pubblicazione
        emailOwner:
          type: string
          description: "Indica le mail da inviare all'owner"
        emailOperatori:
          type: string
          description: Indica le mail da inviare agli operatori
        addNote:
          type: boolean
          description: "Indica che la transizione prevede l'aggiunta di note"
        statiSovrascritti:
          type: array
          description: Elenca le transizioni che vengono mascherate se è possibile quella corrente
          items:
            type: string
        permessi:
          type: object
          description: Id del permesso
          additionalProperties:
            type: boolean
            description: Indica se il ruolo ha il premesso attivo
    TelefonoModel:
      type: object
      properties:
        contattoId:
          type: number
          format: int64
          description: Id del contatto
        contatto:
          type: string
          description: Telefono
    TicketModel:
      type: object
      properties:
        eventoId:
          type: number
          format: int64
          description: Id del relativo evento
        tipoTicket:
          type: string
          description: "Tipologia del ticket (Indefinito, Gratuito, Pagamento)"
        ticketIntero:
          type: number
          description: Prezzo ticket
        ticketRidotto:
          type: number
          description: Prezzo ticket ridotto
        ticketGruppiRidotto:
          type: number
          description: Prezzo ticket ridotto per gruppi
        ticketGruppiNumero:
          type: number
          format: int64
          description: Numero minimo di persone per cui si applica il ticket ridotto per gruppi
        flagGratisAnziani:
          type: boolean
          description: Gratuito per Anziani
        flagGratisBambini:
          type: boolean
          description: Gratuito per Bambini
        flagGratisConvenzioni:
          type: boolean
          description: Gratuito per Convenzioni attive
        flagGratisDisabili:
          type: boolean
          description: Gratuito per Disabili
        flagGratisAccompagnatori:
          type: boolean
          description: Gratuito per Accompagnatori disabili
        flagRidottoAnziani:
          type: boolean
          description: Ridotto per Anziani
        flagRidottoBambini:
          type: boolean
          description: Ridotto per Bambini
        flagRidottoConvenzioni:
          type: boolean
          description: Ridotto per Convenzioni attive
        flagRidottoDisabili:
          type: boolean
          description: Ridotto per Disabili
        flagRidottoAccompagnatori:
          type: boolean
          description: Ridotto per Accompagnatori disabili
        convenzioniAttiveG:
          type: string
          description: "Convenzioni per le quali l'ingresso è gratuito"
        convenzioniAttiveR:
          type: string
          description: "Convenzioni per le quali l'ingresso è ridotto"
        linkPrenotazioni:
          type: string
          description: Link prenotazione
        notaMulti:
          type: object
          description: "Id della lingua (IT, SP, EN, FR, DE, RU)"
          additionalProperties:
            type: string
            description: Nota
    TipologiaAttivitaModel:
      type: object
      properties:
        tipologiaId:
          type: string
          description: Id della tipologia attivita
        tipologia:
          type: string
          description: Descrizione della tipologia attivita
    BandoModelList:
      type: object
      properties:
        bandoId:
          type: string
          description: Id del bando
        titoloBando:
          type: string
          description: titolo del bando
        progettoId:
          type: string
          description: Id del progetto
        titoloProgetto:
          type: string
          description: titolo del progetto
        nomeOrganizzazione:
          type: string
          description: "nome dell'organizzazione"
    TipologiaMIBACTModel:
      type: object
      properties:
        idMIBACT:
          type: string
          description: Id della tipologia mibact
        tipologiaMIBACT:
          type: string
          description: Descrizione della tipologia mibact
    TipologiaModel:
      type: object
      properties:
        tipologiaId:
          type: string
          description: Id della tipologia
        descrizione:
          type: string
          description: Descrizione della tipologia
        isRedattore:
          type: boolean
          description: Flag che indica se si tratta di un profilo redazionale
        ruoliSet:
          type: array
          description: Lista dei ruoli assunti da questa tipologia
          items:
            $ref: "#/components/schemas/RuoloModel"
        redazioniSet:
          type: array
          description: Lista di redazioni collegata a questa tipologia
          items:
            $ref: "#/components/schemas/RedazioneModel"
    ValoreAttrattivitaTuristicaModel:
      type: object
      properties:
        valoreId:
          type: string
          description: "Id del valore d'attrattività"
        valore:
          type: string
          description: "Descrizione del valore d'attrattività"
    WrapperFilterPaginationDetail:
      type: object
      properties:
        draw:
          type: number
          format: int32
          description: "Numero incrementale che definisce l'attuale richiesta (utilizzato a scopo di sicurezza)"
        start:
          type: number
          format: int32
          description: Risultato di partenza della paginazione
        length:
          type: number
          format: int32
          description: Lunghezza di paginazione
        search:
          type: string
          description: Stringa di ricerca testuale
        order:
          type: string
          description: "Colonna per la quale effettuare l'ordinamento"
        dir:
          type: string
          description: "Direzione dell'ordinamento"
    Problem:
      properties:
        detail:
          description: "A human readable explanation specific to this occurrence of the\nproblem. You MUST NOT expose internal informations, personal\ndata or implementation details through this field.\n"
          type: string
        instance:
          description: "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n"
          format: uri
          type: string
        status:
          description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
          type: string
        type:
          default: "about:blank"
          description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
          format: uri
          type: string
      type: object
  responses:
    403Forbidden:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: Forbidden
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: Bad Request
    409Conflict:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: Conflict
    404NotFound:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: Not Found
      headers:
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
    429TooManyRequests:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: Too many requests
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
    401Unauthorized:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: Unauthorized
    default:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: Unexpected error
  headers:
    Retry-After:
      description: "Retry contacting the endpoint *at least* after seconds.\nSee https://tools.ietf.org/html/rfc7231#section-7.1.3"
      schema:
        format: int32
        type: integer
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        format: int32
        type: integer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
